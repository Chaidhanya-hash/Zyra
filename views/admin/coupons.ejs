
<div class=" min-h-screen flex flex-col">
    <!-- Header -->
    <%- include('header') %>
    <%- include('alert') %>
    <!-- Main Content -->
    <div class="flex flex-grow">
        <!-- Sidebar -->
        <aside class="bg-gradient-to-r from-gray-200 to-gray-600 text-black  w-64 lg:w-72 fixed top-0 left-0 py-6 px-5 shadow-lg transition-transform transform lg:translate-x-0 -translate-x-full lg:static z-50" 
       id="adminSidebar">
    <!-- Logo -->
    <div class="flex items-center justify-between mb-8">
        <h2 class="text-2xl font-bold tracking-wide">Admin Panel</h2>
        <button class="lg:hidden text-white text-2xl focus:outline-none" onclick="toggleSidebar()">×</button>
    </div>

    <!-- Navigation -->
    <nav class="space-y-4">
        <!-- Dashboard -->
        <a href="/admin/dashboard" class="flex items-center space-x-4 py-3 px-4 rounded-lg hover:bg-white hover:text-[#4A148C] transition">
            <span class="text-sm font-medium">Dashboard</span>
        </a>

        <!-- Sales report -->
        <a href="/admin/salesReport" class="flex items-center space-x-4 py-3 px-4 rounded-lg hover:bg-white hover:text-[#4A148C] transition">
            <span class="text-sm font-medium">Sales Report</span>
        </a>

        <!-- Products -->
        <a href="/admin/products" class="flex items-center space-x-4 py-3 px-4 rounded-lg hover:bg-white hover:text-[#4A148C] transition">
            <span class="text-sm font-medium">Products</span>
        </a>

        <!-- Category -->
        <a href="/admin/category" class="flex items-center space-x-4 py-3 px-4 rounded-lg hover:bg-white hover:text-[#4A148C] transition">
            <span class="text-sm font-medium">Category</span>
        </a>

        <!-- Brands -->
        <a href="/admin/brand" class="flex items-center space-x-4 py-3 px-4 rounded-lg hover:bg-white hover:text-[#4A148C] transition">
            <span class="text-sm font-medium">Brands</span>
        </a>
        <!-- Customers -->
        <a href="/admin/customers" class="flex items-center space-x-4 py-3 px-4 rounded-lg hover:bg-white hover:text-[#4A148C] transition">
            <span class="text-sm font-medium">Customers</span>
        </a>

        <!-- Orders -->
        <a href="/admin/orders" class="flex items-center space-x-4 py-3 px-4 rounded-lg hover:bg-white hover:text-[#4A148C] transition">
            <span class="text-sm font-medium">Orders</span>
        </a>
        <!-- Coupons -->
        <a href="/admin/coupons" class="flex items-center space-x-4 py-3 px-4 rounded-lg bg-white text-[#4A148C] shadow-md hover:bg-gray-200 transition">
            <span class="text-sm font-medium">Coupons</span>
        </a>

        <!-- Offer -->
        <a href="/admin/offer" class="flex items-center space-x-4 py-3 px-4 rounded-lg hover:bg-white hover:text-[#4A148C] transition">
            <span class="text-sm font-medium">Offers</span>
        </a>

        
        <!-- Logout -->
        <a href="/admin/logout" class="flex items-center space-x-4 py-3 px-4 rounded-lg hover:bg-white hover:text-[#4A148C] transition">
            <span class="text-sm font-medium">Logout</span>
        </a>
    </nav>
</aside>

        <!-- Coupon header Section -->
        <main class="flex-1 p-6 bg-white">
            <div class="flex justify-between  mb-6">
                <h2 class="text-2xl font-semibold">Coupons</h2>
                <form action="/admin/coupons" method="get" class="flex items-center gap-2">
                    <input type="text" name="search" placeholder="Search" class="border border-gray-300 rounded-lg px-4 py-2">
                    <input type="submit" value="Search" class="bg-gradient-to-r from-orange-500 to-red-500 text-white px-4 py-2 rounded-lg cursor-pointer">
                </form>
                <button type="button" class="bg-gradient-to-r from-orange-500 to-red-500 text-white px-6 py-2 rounded-lg shadow-md hover:opacity-90" onclick="openAddModal()" id="openModal">
                    Add Coupon
                </button>
            </div>
            
        
            <!-- Coupons Table -->
            <div class="rounded-lg shadow-lg overflow-hidden">
                <table class="w-full text-left text-base border-collapse">
                    <thead class="bg-gradient-to-r from-gray-200 to-gray-600 text-black">
                        <tr>
                            <th class="py-4 px-5 border-b">SL.No</th>
                            <th class="py-4 px-5 border-b">Coupon Code</th>
                            <th class="py-4 px-5 border-b">Discount Type</th>
                            <th class="py-4 px-5 border-b">Discount Value</th>
                            <th class="py-4 px-5 border-b">Min Amount</th>
                            <th class="py-4 px-5 border-b">Start Date</th>
                            <th class="py-4 px-5 border-b">End Date</th>
                            <th class="py-4 px-5 border-b">Status</th>
                            <th class="py-4 px-5 border-b">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% coupons.forEach((coupon, index) => { %>
                            <tr class="hover:bg-gray-100">
                                <td class="py-3 px-5 border-b"><%= index + 1 + ((page - 1) * 8) %></td>
                                <td class="py-3 px-5 border-b"><%= coupon.code %></td>
                                <td class="py-3 px-5 border-b"><%= coupon.discountType %></td>
                                <td class="py-3 px-5 border-b"><%= coupon.discountValue %></td>
                                <td class="py-3 px-5 border-b"><%= coupon.minimumOrderAmount %></td>
                                <td class="py-3 px-5 border-b"><%= new Date(coupon.startDate).toLocaleDateString() %></td>
                                <td class="py-3 px-5 border-b"><%= new Date(coupon.endDate).toLocaleDateString() %></td>
                                <td class="py-3 px-5 border-b">
                                    <span class="<%= coupon.isActive ? 'text-green-600' : 'text-red-600' %>">
                                        <%= coupon.isActive ? 'Active' : 'Blocked' %>
                                    </span>
                                </td>
                                <td class="py-3 px-5 border-b flex space-x-2 items-center">
                                    <a href="#" id="edit-collection-modal" data-bs-toggle="modal" data-bs-target="#editCollection" 
                                        class="text-blue-500 hover:underline" onclick="editCoupon('<%= coupon.id %>')">✏️</a>
                                    <a href="/admin/statuscoupon?id=<%= coupon.id %>&status=<%= coupon.isActive %>" 
                                        class="text-gray-600 hover:text-gray-800">❌</a>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            
                <!-- Pagination -->
                <div class="pagination-controls flex mt-5 justify-center">
                    <ul class="flex items-center space-x-2">
                        <% if (currentPage > 1) { %>
                            <li>
                                <a href="/admin/coupons=<%= currentPage - 1 %>&limit=<%= limit %>&search=<%= search %>" 
                                    class="px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300"><<</a>
                            </li>
                        <% } %>
                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <li>
                                <a href="/admin/coupons?page=<%= i %>&limit=<%= limit %>&search=<%= search %>" 
                                    class="px-4 py-2 rounded 
                                        <%= currentPage == i ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300' %>">
                                    <%= i %>
                                </a>
                            </li>
                        <% } %>
                        <% if (currentPage < totalPages) { %>
                            <li>
                                <a href="/admin/coupons=<%= currentPage + 1 %>&limit=<%= limit %>&search=<%= search %>" 
                                    class="px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300">>></a>
                            </li>
                        <% } %>
                    </ul>
                </div>
            </div>
            
        </main>
        
    </div>

    <!-- Footer -->
    <%- include('footer') %>

<!-- ------------------------------------Add coupon Modal------------------------ -->

<div id="addCollection" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 hidden">
    <div class="bg-white rounded-lg shadow-xl w-full max-w-md transform transition-all duration-300 ease-in-out">
        <div class="flex justify-between items-center px-6 py-4 border-b border-gray-200">
            <h5 class="text-xl font-semibold text-gray-800" id="addCouponLabel">Add Coupon</h5>
            <button type="button" class="text-gray-500 hover:text-gray-700 focus:outline-none" onclick="closeModal()">
                <span class="sr-only">Close</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>
        <div class="p-6 space-y-4">
            <form id="addCouponForm">
                <div class="mb-4">
                    <label for="code" class="block text-sm font-medium text-gray-700">Coupon Code</label>
                    <input type="text" id="code" name="code" 
                        class="mt-2 block w-full rounded-md border border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                        minlength="3" 
                        >
                </div>
                <div class="mb-4">
                    <label for="discountType" class="block text-sm font-medium text-gray-700">Discount Type</label>
                    <select id="discountType" name="discountType" 
                        class="mt-2 block w-full rounded-md border border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                        <option value="Percentage">Percentage</option>
                        <option value="Fixed">Fixed</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label for="discountValue" class="block text-sm font-medium text-gray-700">Discount Value</label>
                    <input type="number" id="discountValue" name="discountValue" 
                        class="mt-2 block w-full rounded-md border border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                        min="1" 
                        step="any" 
                        >
                </div>
                <div class="mb-4">
                    <label for="minimumOrderAmount" class="block text-sm font-medium text-gray-700">Minimum Order Amount</label>
                    <input type="number" id="minimumOrderAmount" name="minimumOrderAmount" 
                        class="mt-2 block w-full rounded-md border border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                        min="1" 
                        step="any" 
                        >
                </div>
                <div class="mb-4">
                    <label for="startDate" class="block text-sm font-medium text-gray-700">Start Date</label>
                    <input type="date" id="startDate" name="startDate" 
                        class="mt-2 block w-full rounded-md border border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                        >
                </div>
                <div class="mb-4">
                    <label for="endDate" class="block text-sm font-medium text-gray-700">End Date</label>
                    <input type="date" id="endDate" name="endDate" 
                        class="mt-2 block w-full rounded-md border border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                        >
                </div>
                <button type="submit" class="w-full bg-indigo-600 text-white py-3 px-4 rounded-md font-medium hover:bg-indigo-700 focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:outline-none transition duration-150 ease-in-out">
                    Add Coupon
                </button>
            </form>
        </div>
    </div>
</div>

<!-- --------------------------edit coupon Modal--------------------------    -->

<div id="editCollection" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 hidden">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-md">
        <div class="flex justify-between items-center px-4 py-3 border-b">
            <h5 id="editCouponLabel" class="text-lg font-semibold">Edit Coupon</h5>
            <button type="button" class="text-gray-500 hover:text-gray-700 focus:outline-none" onclick="closeEditModal()">
                <span class="sr-only">Close</span>&times;
            </button>
        </div>
        <div class="p-4">
            <form id="editCouponForm">
                <input type="hidden" id="editCouponId" name="id">

                <div class="mb-4">
                    <label for="editCode" class="block text-sm font-medium text-gray-700">Coupon Code</label>
                    <input type="text" id="editCode" name="code" 
                        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" 
                        >
                </div>

                <div class="mb-4">
                    <label for="editDiscountType" class="block text-sm font-medium text-gray-700">Discount Type</label>
                    <select id="editDiscountType" name="discountType" 
                        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" 
                        >
                        <option value="Percentage">Percentage</option>
                        <option value="Fixed">Fixed</option>
                    </select>
                </div>

                <div class="mb-4">
                    <label for="editDiscountValue" class="block text-sm font-medium text-gray-700">Discount Value</label>
                    <input type="number" id="editDiscountValue" name="discountValue" 
                        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" 
                        >
                </div>

                <div class="mb-4">
                    <label for="editStartDate" class="block text-sm font-medium text-gray-700">Start Date</label>
                    <input type="date" id="editStartDate" name="startDate" 
                        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" 
                        >
                </div>

                <div class="mb-4">
                    <label for="editEndDate" class="block text-sm font-medium text-gray-700">End Date</label>
                    <input type="date" id="editEndDate" name="endDate" 
                        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" 
                        >
                </div>

                <div class="mb-4">
                    <label for="editMinimumOrderAmount" class="block text-sm font-medium text-gray-700">Minimum Order Amount</label>
                    <input type="number" id="editMinimumOrderAmount" name="minimumOrderAmount" 
                        class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" 
                        >
                </div>

                <button type="submit" 
                    class="w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:ring-2 focus:ring-indigo-500 focus:outline-none">
                    Update Coupon
                </button>
            </form>
        </div>
    </div>
</div>

    
</div>

<script>
    function openAddModal() {
        document.getElementById('addCollection').classList.remove('hidden');
    }

    function closeModal() {
        document.getElementById('addCollection').classList.add('hidden');
    }

    

    function closeEditModal(){
        document.getElementById('editCollection').classList.add('hidden');
    }
    //-----------------------------------Add Coupon-------------------------------------

    function validateCouponForm(formData) {
    const errors = [];
    
    // Coupon code validation
    if (!formData.code || formData.code.trim().length < 3 || formData.code.trim().length > 7) {
        errors.push('Coupon code must be at least 3 characters long and below 8 charachters');
    }

    // Discount value validation
    const discountValue = parseFloat(formData.discountValue);
    if (isNaN(discountValue) || discountValue <= 0 || discountValue > 501) {
        errors.push('Discount value must be greater than 0 and less than 500');
    }
    if (formData.discountType === 'Percentage' && discountValue >= 98) {
        errors.push('Percentage discount cannot be more than 98%');
    }

    // Minimum order amount validation
    const minAmount = parseFloat(formData.minimumOrderAmount);
    if (isNaN(minAmount) || minAmount <= 0) {
        errors.push('Minimum order amount must be greater than 0');
    }

    // Date validation
    const startDate = new Date(formData.startDate);
    const endDate = new Date(formData.endDate);
    const today = new Date();
    today.setHours(0, 0, 0, 0);

    if (!formData.startDate || startDate < today) {
        errors.push('Start date must be today or a future date');
    }
    if (!formData.endDate || endDate <= startDate) {
        errors.push('End date must be after start date');
    }

    return errors;
}

    document.getElementById('addCouponForm').addEventListener('submit', async function (e) {
                e.preventDefault();
                const formData = new FormData(this);
                const data = Object.fromEntries(formData.entries());

                // Validate form data
                const validationErrors = validateCouponForm(data);
                if (validationErrors.length > 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Validation Error',
                        html: validationErrors.join('<br>'),
                    });
                    return;
                }
                try {
                    const response = await fetch('/admin/addcoupon', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });
                    const result = await response.json();
                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: result.message,
                        }).then(() => {
                            this.reset();
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: result.message,
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while adding the coupon.',
                    });
                }
            });

    //------------------- Edit Coupon ------------------------------
    // ... existing code ...

//------------------- Edit Coupon ------------------------------
function editCoupon(id) { // Add id parameter here
    document.getElementById('editCollection').classList.remove('hidden');
    
    // Fetch coupon data immediately instead of waiting for DOMContentLoaded
    fetch(`/admin/coupons/${id}`)
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(coupon => {
            document.getElementById('editCouponId').value = coupon._id;
            document.getElementById('editCode').value = coupon.code;
            document.getElementById('editDiscountType').value = coupon.discountType;
            document.getElementById('editDiscountValue').value = coupon.discountValue;
            document.getElementById('editStartDate').value = new Date(coupon.startDate).toISOString().split('T')[0];
            document.getElementById('editEndDate').value = new Date(coupon.endDate).toISOString().split('T')[0];
            document.getElementById('editMinimumOrderAmount').value = coupon.minimumOrderAmount;
        })
        .catch(error => {
            console.error('Error fetching coupon data:', error);
            Swal.fire({
                title: 'Error',
                text: 'Failed to load coupon data.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        });
}

document.addEventListener('DOMContentLoaded', function () {
    document.getElementById('editCouponForm').addEventListener('submit', async (event) => {
        event.preventDefault();
        const formData = new FormData(event.target);
        const data = Object.fromEntries(formData.entries());

        // Validate form data
        const validationErrors = validateCouponForm(data);
        if (validationErrors.length > 0) {
            Swal.fire({
                icon: 'error',
                title: 'Validation Error',
                html: validationErrors.join('<br>'),
            });
            return;
        }

        
        // Log the data being sent
        console.log('Submitting data:', data);
        
        try {
            const response = await fetch(`/admin/editcoupon/${data.id}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    id: document.getElementById('editCouponId').value,
                    code: document.getElementById('editCode').value,
                    discountType: document.getElementById('editDiscountType').value,
                    discountValue: document.getElementById('editDiscountValue').value,
                    startDate: document.getElementById('editStartDate').value,
                    endDate: document.getElementById('editEndDate').value,
                    minimumOrderAmount: document.getElementById('editMinimumOrderAmount').value
                }),
            });
            
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            
            const result = await response.json();
            Swal.fire({
                title: 'Success',
                text: result.message,
                icon: 'success',
                confirmButtonText: 'OK'
            }).then(() => {
                window.location.reload();
            });
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error',
                text: 'Failed to update coupon.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    });
});
    

</script>