
<%- include('header') %>
<%- include ('alert') %>
<!-- -----------------------User Profile------------------------------- -->

<div class=" max-w-screen-lg mx-auto mt-5">
    <div class=" flex flex-wrap -mx-4 gap-16 ">
        <div class="w-full lg:w-[23%] ">
            <div class="bg-gray-200 shadow-lg rounded-lg p-4 user-side-div">
                <div class="card-sidebar">
                    <h2 class="text-lg font-semibold flex items-center space-x-2 mb-4">
                        <span>Menu</span>
                    </h2>
                    <ul class="space-y-2">
                        <li>
                            <a href="/profile" class="flex items-center space-x-2 px-4 py-2 bg-white rounded hover:underline">
                                <span>Profile</span>
                            </a>
                        </li>
                        <li>
                            <a href="/orders" class="flex items-center space-x-2 px-4 py-2 bg-white rounded hover:underline">
                                <span>My Orders</span>
                            </a>
                        </li>
                        <li>
                            <a href="/wallet" class="flex items-center space-x-2 px-4 py-2 bg-white rounded hover:underline">
                               
                                <span>Wallet</span>
                            </a>
                        </li>
                        <li>
                            <a href="/ressetprofile-password" class="flex items-center space-x-2 px-4 py-2 bg-white rounded hover:underline">
                                
                                <span>Reset Password</span>
                            </a>
                        </li>
                        <li>
                            <a href="/logout" class="flex items-center space-x-2 px-4 py-2 bg-white rounded hover:underline">
                                
                                <span>Logout</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- --------------profile----------------- -->
        <div class="w-full lg:w-[70%] ">
            <div class="bg-gray-200 shadow-md rounded-lg p-6 user-profile-div">
                <div class="flex items-start">
                    <!-- Left Section: Icon and Heading -->
                    <div class="flex-shrink-0 mr-6">
                        <svg xmlns="http://www.w3.org/2000/svg" class="text-gray-700 w-20 h-20" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM5.216 14A2.238 2.238 0 0 1 4 12.765C4 11.544 5.75 11 8 11s4 .544 4 1.765A2.238 2.238 0 0 1 10.784 14H5.216z" />
                        </svg>
                        <h2 class="text-xl font-semibold mt-4 text-gray-800">Your Profile</h2>
                    </div>
        
                    <!-- Right Section: Form -->
                    <div class="flex-grow">
                        <form id="profile-form" method="post" action="/update-profile" class="mt-0">
                            <div class="mb-3">
                                <label class="block text-gray-600 font-medium mb-2">Name</label>
                                <input type="text" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring focus:ring-blue-500"
                                    name="userName" id="userName" required value="<%= userDetail.name %>" />
                            </div>
                            <div class="mb-3">
                                <label class="block text-gray-600 font-medium mb-2">Email Address</label>
                                <input type="email" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring focus:ring-blue-500"
                                    name="email" id="email" required value="<%= userDetail.email %>" readonly />
                            </div>
                            <div class="mb-5">
                                <label class="block text-gray-600 font-medium mb-2">Phone Number</label>
                                <input type="text" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring focus:ring-blue-500"
                                    name="phoneNumber" id="phoneNumber" required value="<%= userDetail.phone %>" />
                            </div>
                            <button type="submit" class="w-full bg-red-500 text-white py-2 rounded hover:bg-red-600"
                                id="update-btn">Update</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        
    </div>
<!-- ----------------------Address--------------------------- -->
<div class="w-[70%] items-center justify-center ml-32 mt-10 mb-20">
    <div class="bg-gray-200 shadow-lg rounded-lg p-6 user-profile-div">
        <div class="address-profile flex justify-between items-center">
            <h1 class="text-2xl font-semibold text-gray-800">Your Address</h1>
            <div class="pen-option text-right">
                <% if (userDetail.address.length < 3 ) { %>
                    <a href="#" onclick="toggleModal()" title="Add New Address" 
                        class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">
                            Add Address
                    </a>
                <% } else { %>
                    <span class="text-gray-600">Maximum 4 addresses reached</span>
                <% } %>
            </div>
        </div>

        <div class="address-cards mt-5">
            <% if (!userDetail.address || userDetail.address.length === 0) { %>
                <p class="mt-5 text-gray-500">No Address Found. Please add an Address.</p>
            <% } else { %>
                <% userDetail.address.forEach((address, index) => { %>
                    <div class="single-address-div bg-white p-4 rounded-lg mb-4 shadow-md">
                        <div class="address-icons flex justify-between">
                            <a href="/edit-address/<%= index %>" title="Edit Address" class="text-blue-500 hover:text-blue-700">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-6 h-6" viewBox="0 0 24 24">
                                    <path d="M3 21v-3.5l13-13 3.5 3.5-13 13H3zm15.5-16.5L14 2l-1.5 1.5 4.5 4.5L21 6l-2.5-2.5z"/>
                                  </svg> 
                            </a>
                            <a href="#" class="delete-address text-red-500 hover:text-red-700" data-address-index="<%= index %>" title="Delete Address">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-6 h-6" viewBox="0 0 16 16">
                                    <path d="M5.5 1a1 1 0 0 0-1 1H2a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2h-2.5a1 1 0 0 0-1-1h-4zM3.5 4h9l-.5 10a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1L3.5 4zm2.5 3a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V7zm3 0a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V7zm3 0a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V7z"/>
                                  </svg>                                  

                            </a>
                        </div>
                        <div class="address mt-3">
                            <p>
                                <span class="font-semibold"><%= address.building %>,</span>
                                <span><%= address.street %>,</span>
                            </p>
                            <p>
                                <%= address.city %>,
                            </p>
                            <p>
                                <%= address.state %>, <%= address.country %>
                            </p>
                            <span class="block text-gray-600">
                                <%= address.landmark %>
                            </span>
                            <p class="mt-2">
                                <span class="font-semibold">Pincode: </span><%= address.pincode %>
                            </p>
                            <p>
                                <span class="font-semibold">Phone: </span><%= address.phoneNumber %>
                            </p>
                        </div>
                    </div>
                <% }) %>
            <% } %>
        </div>
    </div>
</div>

</div>


<%- include('footer') %>

<!-- --------------------------------Address modal------------------------------------- -->

<div class="fixed inset-0 z-50 flex  justify-center items-center bg-black bg-opacity-50 hidden" id="addressModal">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-lg">
      <div class="border-b px-6 py-4 flex justify-between items-center">
        <h5 class="text-lg font-semibold">Add New Address</h5>
        <button type="button" class="text-gray-500 hover:text-black" onclick="closeModal()">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <div class="px-6 py-4">
        <form id="addressForm" method="post" action="/add-address">
          <div class="mb-4">
            <label for="building" class="block text-sm font-medium text-gray-700 mb-1">Flat, House no., Building, Company, Apartment</label>
            <input type="text" id="building" name="building" class="w-full border rounded px-3 py-2 focus:ring focus:ring-blue-500" placeholder="Enter your address" >
          </div>
          <div class="mb-4">
            <label for="street" class="block text-sm font-medium text-gray-700 mb-1">Area, Street, Sector, Village</label>
            <input type="text" id="street" name="street" class="w-full border rounded px-3 py-2 focus:ring focus:ring-blue-500" placeholder="Enter your area" >
          </div>
          <div class="mb-4">
            <label for="city" class="block text-sm font-medium text-gray-700 mb-1">Town/City</label>
            <input type="text" id="city" name="city" class="w-full border rounded px-3 py-2 focus:ring focus:ring-blue-500" placeholder="Enter your city" >
          </div>
          <div class="grid grid-cols-2 gap-4 mb-4">
            <div>
              <label for="phonenumber" class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
              <input type="tel" id="phonenumber" name="phonenumber" class="w-full border rounded px-3 py-2 focus:ring focus:ring-blue-500" placeholder="Contact number" >
            </div>
            <div>
              <label for="pincode" class="block text-sm font-medium text-gray-700 mb-1">Pincode</label>
              <input type="text" id="pincode" name="pincode" class="w-full border rounded px-3 py-2 focus:ring focus:ring-blue-500" placeholder="Enter your pincode" >
            </div>
          </div>
          <div class="mb-4">
            <label for="landmark" class="block text-sm font-medium text-gray-700 mb-1">Landmark</label>
            <input type="text" id="landmark" name="landmark" class="w-full border rounded px-3 py-2 focus:ring focus:ring-blue-500" placeholder="Enter nearest landmark" >
          </div>
          <div class="grid grid-cols-2 gap-4 mb-4">
            <div>
              <label for="state" class="block text-sm font-medium text-gray-700 mb-1">State</label>
              <input type="text" id="state" name="state" class="w-full border rounded px-3 py-2 focus:ring focus:ring-blue-500" placeholder="Enter your state" >
            </div>
            <div>
              <label for="country" class="block text-sm font-medium text-gray-700 mb-1">Country</label>
              <input type="text" id="country" name="country" class="w-full border rounded px-3 py-2 focus:ring focus:ring-blue-500" placeholder="Enter your country" >
            </div>
          </div>
          <div class="flex justify-end space-x-4">
            <button type="button" class="px-4 py-2 bg-gray-300 text-gray-800 rounded hover:bg-gray-400" onclick="closeModal()">Close</button>
            <button type="submit" class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600">Save</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script>
    function toggleModal() {
        const modal = document.getElementById('addressModal');
        modal.classList.toggle('hidden');
        modal.classList.add('flex');
    }

function closeModal() {
    const modal = document.getElementById('addressModal');
    modal.classList.add('hidden');
}

    //---------------------------Alert for deleting  address--------------------------

    document.addEventListener('DOMContentLoaded', function () {
                const deleteButtons = document.querySelectorAll('.delete-address');

                deleteButtons.forEach(button => {
                    button.addEventListener('click', function (event) {
                        event.preventDefault();
                        const addressIndex = parseInt(this.getAttribute('data-address-index'));
                        if (!isNaN(addressIndex) && addressIndex >= 0) {
                            Swal.fire({
                                title: 'Are you sure?',
                                text: "You won't be able to revert this!",
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, delete it!'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = "/remove-address/" + addressIndex;
                                }
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Invalid Address Index',
                                text: 'The address index is invalid. Please try again.'
                            });
                        }
                    });
                });
            });

        //---------------------------VAlidation for Profile----------------------------

            document.getElementById('profile-form').addEventListener('submit', function (event) {
                // Get form input values
                const userName = document.getElementById('userName').value.trim();
                const phoneNumber = document.getElementById('phoneNumber').value.trim();

                // Regular expressions for validation
                const namePattern = /^[a-zA-Z\s]+$/;
                const phonePattern = /^\d{10}$/;

                // Validate name
                if (!namePattern.test(userName)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Name',
                        text: 'Please enter a valid name. Only letters and spaces are allowed.'
                    });
                    event.preventDefault();
                    return;
                }

                // Validate phone number
                if (!phonePattern.test(phoneNumber)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Phone Number',
                        text: 'Please enter a valid phone number. It should be 10 digits.'
                    });
                    event.preventDefault();
                    return;
                }
            });

        //------------------- validation for modal --------------------

        document.addEventListener('DOMContentLoaded', (event) => {
                const addressForm = document.getElementById('addressForm');
                const building = document.getElementsByName('building')[0];
                const street = document.getElementsByName('street')[0];
                const city = document.getElementsByName('city')[0];
                const phone = document.getElementsByName('phonenumber')[0];
                const pincode = document.getElementsByName('pincode')[0];
                const landmark = document.getElementsByName('landmark')[0];
                const state = document.getElementsByName('state')[0];
                const country = document.getElementsByName('country')[0];

                function validatePhone(phone) {
                    const phoneRe = /^\d{10}$/;
                    return phoneRe.test(phone);
                }
                function validatePincode(pincode) {
                    const pincodeRe = /^\d{6}$/;
                    return pincodeRe.test(pincode);
                }
                addressForm.addEventListener('submit', (e) => {
                    e.preventDefault();
                    if (building.value.trim() === "" || !isNaN(building.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "Building field must not be empty and Not a Number.",
                            icon: "error"
                        });
                    } else if (building.value.length > 50 || building.value.length < 4) {
                        Swal.fire({
                            title: "Error",
                            text: "Building field must be Greater than 4 letters and less than 50 letters.",
                            icon: "error"
                        });
                    } else if (street.value.trim() === "" || !isNaN(street.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "Street field must not be empty and Not a Number.",
                            icon: "error"
                        });
                    } else if (street.value.length > 50 || street.value.length < 4) {
                        Swal.fire({
                            title: "Error",
                            text: "Street Field Must be Greater than 4 Letters and less than 50 letters.",
                            icon: "error"
                        });
                    } else if (city.value.trim() === "" || !isNaN(city.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "City field must not be empty and Not a Number.",
                            icon: "error"
                        });
                    } else if (city.value.length > 25 || city.value.length < 4) {
                        Swal.fire({
                            title: "Error",
                            text: "City field must be Greater than 4 Words and less than 25 Words.",
                            icon: "error"
                        });
                    } else if (!validatePhone(phone.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "Phone number must be 10 digits.",
                            icon: "error"
                        });
                    } else if (!validatePincode(pincode.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "Pincode must be 6 digits.",
                            icon: "error"
                        });
                    } else if (landmark.value.trim() === "" || !isNaN(landmark.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "Landmark field must not be empty.",
                            icon: "error"
                        });
                    } else if (state.value.trim() === "" || !isNaN(state.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "State field must not be empty.",
                            icon: "error"
                        });
                    } else if (country.value.trim() === "" || !isNaN(country.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "Country field must not be empty.",
                            icon: "error"
                        });
                    } else {
                        addressForm.submit();
                    }
                });
            });
  </script>
  