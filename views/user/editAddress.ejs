

<div class="fixed inset-0 z-50 flex justify-center items-center bg-black bg-opacity-50" id="editModal">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-lg">
        <div class="px-6 py-4 border-b flex justify-between items-center">
            <h2 class="text-xl font-semibold">Edit Address</h2>
            <a onclick="window.history.back();">
                <button type="button" class="text-gray-500 hover:text-black" >
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </a>
            
        </div>
        <form method="post" id="editaddress" action="<% if (context === 'Profile') { %>/update-address/<%= index %><% } else if (context === 'Checkout') { %>/updateAddress/<%= index %><% }  %> " class="px-6 py-4">
            <div class="space-y-4">
                <div>
                    <label for="building" class="block text-sm font-medium text-gray-700">Flat, House no., Building, Company, Apartment</label>
                    <input type="text" name="building" id="building" class="w-full border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500" value="<%= data.building %>" >
                </div>

                <div>
                    <label for="street" class="block text-sm font-medium text-gray-700">Area, Street, Sector, Village</label>
                    <input type="text" name="street" id="street" class="w-full border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500" value="<%= data.street %>" >
                </div>

                <div>
                    <label for="city" class="block text-sm font-medium text-gray-700">Town/City</label>
                    <input type="text" name="city" id="city" class="w-full border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500" value="<%= data.city %>" >
                </div>

                <div class="grid grid-cols-2 gap-4">
                    <div>
                        <label for="phonenumber" class="block text-sm font-medium text-gray-700">Phone Number</label>
                        <input type="text" name="phonenumber" id="phonenumber" class="w-full border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500" value="<%= data.phonenumber %>" >
                    </div>
                    <div>
                        <label for="pincode" class="block text-sm font-medium text-gray-700">Pincode</label>
                        <input type="text" name="pincode" id="pincode" class="w-full border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500" value="<%= data.pincode %>" >
                    </div>
                </div>

                <div>
                    <label for="landmark" class="block text-sm font-medium text-gray-700">Land Mark</label>
                    <input type="text" name="landmark" id="landmark" class="w-full border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500" value="<%= data.landmark %>" >
                </div>

                <div class="grid grid-cols-2 gap-4">
                    <div>
                        <label for="state" class="block text-sm font-medium text-gray-700">State</label>
                        <input type="text" name="state" id="state" class="w-full border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500" value="<%= data.state %>" >
                    </div>
                    <div>
                        <label for="country" class="block text-sm font-medium text-gray-700">Country</label>
                        <input type="text" name="country" id="country" class="w-full border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500" value="<%= data.country %>" >
                    </div>
                </div>
            </div>

            <div class="mt-4 flex justify-end space-x-4">
                <a onclick="window.history.back();">
                <button type="button" class="px-4 py-2 bg-gray-300 text-gray-800 rounded hover:bg-gray-400">Close</button>

                </a>
                <button type="submit" class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600">Update</button>
            </div>
        </form>
    </div>
</div>

<script>
    //---------------------- validation for the edit address ------------------------------

    document.addEventListener('DOMContentLoaded', (event) => {
                const editaddress = document.getElementById('editaddress');
                const building = document.getElementsByName('building')[0];
                const street = document.getElementsByName('street')[0];
                const city = document.getElementsByName('city')[0];
                const phone = document.getElementsByName('phonenumber')[0];
                const pincode = document.getElementsByName('pincode')[0];
                const landmark = document.getElementsByName('landmark')[0];
                const state = document.getElementsByName('state')[0];
                const country = document.getElementsByName('country')[0];

                function validatePhone(phone) {
                    const phoneRe = /^\d{10}$/;
                    return phoneRe.test(phone);
                }

                function validatePincode(pincode) {
                    const pincodeRe = /^\d{6}$/;
                    return pincodeRe.test(pincode);
                }
                
                editaddress.addEventListener('submit', (e) => {
                    e.preventDefault();
                    if (building.value.trim() === "" || !isNaN(building.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "Building field must not be empty and Not a Number.",
                            icon: "error"
                        });
                    } else if ( building.value.length > 25 || building.value.length < 4) {
                        Swal.fire({
                            title: "Error",
                            text: "Building field must be Greater than 4 letters and less than 25 letters.",
                            icon: "error"
                        });
                    }else if (street.value.trim() === "" || !isNaN(street.value) ) {
                        Swal.fire({
                            title: "Error",
                            text: "Street field must not be empty and Not a Number.",
                            icon: "error"
                        });
                    }else if (street.value.length > 50 || street.value.length < 4 ) {
                        Swal.fire({
                            title: "Error",
                            text: "Street Field Must be Greater than 4 Letters and less than 50 letters.",
                            icon: "error"
                        });
                    }else if (city.value.trim() === "" || !isNaN(city.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "City field must not be empty and Not a Number.",
                            icon: "error"
                        });
                    }else if (city.value.length > 25 || city.value.length < 4) {
                        Swal.fire({
                            title: "Error",
                            text: "City field must be Greater than 4 Words and less than 25 Words.",
                            icon: "error"
                        });
                    }else if (!validatePhone(phone.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "Phone number must be 10 digits.",
                            icon: "error"
                        });
                    } else if (!validatePincode(pincode.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "Pincode must be 6 digits.",
                            icon: "error"
                        });
                    } else if (landmark.value.trim() === "" || !isNaN(landmark.value)) {
                        Swal.fire({
                            title: "Error",
                            text: "Landmark field must not be empty.",
                            icon: "error"
                        });
                    } else if (state.value.trim() === "" || !isNaN(state.value) ) {
                        Swal.fire({
                            title: "Error",
                            text: "State field must not be empty.",
                            icon: "error"
                        });
                    } else if (country.value.trim() === "" || !isNaN(country.value) ) {
                        Swal.fire({
                            title: "Error",
                            text: "Country field must not be empty.",
                            icon: "error"
                        });
                    } else {
                        editaddress.submit();
                    }
                });
            });
</script>

