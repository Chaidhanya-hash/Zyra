<%- include('header') %>

<%- include('alert') %>

<% if (cart && cart.items.length > 0) { %>
    <div class="cart-card">
        <div class="bg-white shadow-md rounded-lg">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 p-4">
                <!-- Cart Items Section -->
                <div class="md:col-span-2 bg-white rounded-lg shadow-sm p-4">
                    <div class="mb-6 flex justify-between items-center">
                        <h4 class="text-xl font-bold text-gray-800">Shopping Cart</h4>
                        <div class="text-gray-600"><%= cart.items.length %> items</div>
                    </div>
                    <% cart.items.forEach((item, index) => { %>
                        <div class="border-t border-gray-200 py-4">
                            <div class="flex items-center justify-between space-x-4">
                                <div class="w-1/5">
                                    <img class="h-20 w-20 object-cover rounded-lg" src="<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>">
                                </div>
                                <div class="w-2/5 px-4">
                                    <div class="text-lg font-semibold text-gray-800"><%= item.productId.productName %></div>
                                    <div class="text-sm text-gray-500">Category: <%= item.productId.productCategory %></div>
                                </div>
                                <div class="w-1/5 flex items-center space-x-2">
                                    <button class="px-3 py-1 border rounded bg-gray-200 text-gray-700 hover:bg-gray-300" onclick="decrement('<%= item.productId._id %>')">-</button>
                                    <input type="text" class="w-12 text-center border rounded" value="<%= item.productCount %>" readonly>
                                    <button class="px-3 py-1 border rounded bg-gray-200 text-gray-700 hover:bg-gray-300" onclick="increment('<%= item.productId._id %>')">+</button>
                                </div>
                                <div class="w-1/5 text-right text-gray-700">
                                    <i class="fa-solid fa-indian-rupee-sign"></i> <%= item.productPrice.toFixed(2) %>
                                </div>
                                <div class="w-1/6 text-right">
                                    <a href="#" class="text-red-500 hover:text-red-700 delete-link" data-id="<%= item.productId._id %>">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-6 h-6" viewBox="0 0 16 16">
                                            <path d="M5.5 1a1 1 0 0 0-1 1H2a1 1 0 1 0 0 2h12a1 1 0 1 0 0-2h-2.5a1 1 0 0 0-1-1h-4zM3.5 4h9l-.5 10a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1L3.5 4zm2.5 3a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V7zm3 0a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V7zm3 0a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V7z"/>
                                        </svg>
                                    </a>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                    <div class="mt-6">
                        <a href="/home" class="text-blue-500 hover:underline">‚Üê Back to shop</a>
                    </div>
                </div>
    
                <!-- Summary Section -->
                <div class="bg-gray-100 p-6 rounded-lg shadow-sm">
                    <h5 class="text-xl font-bold text-gray-800 mb-6">Summary</h5>
                    <hr class="border-gray-300 mb-6">
                    <div class="space-y-4">
                        <% cart.items.forEach((item, index) => { %>
                            <div class="flex justify-between items-center text-sm text-gray-700">
                                <span><%= item.productId.productName %> x <%= item.productCount %></span>
                                <span class="text-gray-500"><%= item.productId.productDiscount %>%</span>
                                <span class="font-semibold">
                                    <i class="fa-solid fa-indian-rupee-sign"></i> 
                                    <%= (item.productPrice - item.productPrice * (item.productId.productDiscount / 100)).toFixed(2) %>
                                </span>
                            </div>
                        <% }) %>
                    </div>
                    <hr class="border-gray-300 mt-6">
                    
                    <div class="mt-6">
                        <h6 class="font-semibold text-gray-800">Delivery</h6>
                        <% if (cart.totalPrice > 1000) { %>
                            <p class="text-sm text-gray-500">Shipping Charge: Free</p>
                        <% } else { %>
                            <p class="text-sm text-gray-500">Shipping Charge: 
                                <i class="fa-solid fa-indian-rupee-sign"></i> 50
                            </p>
                        <% } %>
                    </div>
                    <hr class="border-gray-300 mt-6">
                    
                    <div class="mt-6 flex justify-between items-center text-sm text-gray-700">
                        <span>GST (12%)</span>
                        <span>
                            <i class="fa-solid fa-indian-rupee-sign"></i> 
                            <%= (Math.round(cart.payableAmount * (12 / 100))).toFixed(2) %>
                        </span>
                    </div>
                    
                    <div class="mt-6 flex justify-between font-semibold text-gray-800">
                        <span>Total Price</span>
                        <span>
                            <i class="fa-solid fa-indian-rupee-sign"></i> 
                            <%= cart.payableAmount.toFixed(2) %>
                        </span>
                    </div>
                
                    <div class="mt-6">
                        <% let allInStock = true; %>
                        <% cart.items.forEach((item) => { %>
                            <% if (item.productId.productQuantity <= 0) { %>
                                <% allInStock = false; %>
                            <% } %>
                        <% }) %>
                        <% if (allInStock) { %>
                            <a href="/checkOut" class="w-full bg-blue-500 text-white py-3 px-4 rounded-lg text-center hover:bg-blue-700 transition ease-in-out duration-300">Checkout</a>
                        <% } else { %>
                            <p class="text-sm text-red-500">One or more products are out of stock</p>
                        <% } %>
                    </div>
                </div>
                
            </div>
        </div>
    </div>
    
<% } else { %>
    <!-- Empty Cart Section -->
    <div class="flex flex-col items-center justify-center py-10">
        <img src="/styles/images/empty_cart.jpeg" class="w-40 h-40 mb-4" alt="Empty Cart">
        <h2 class="text-xl font-bold">Your cart is empty!</h2>
        <p class="text-center text-gray-500">Looks like you have not added anything to your cart!</p>
        <p class="text-center">
            Continue shopping on the <a href="/home" class="text-blue-500 hover:underline">Zyra's homepage</a>,
            learn about today's deals, or visit your <a href="/allproduct" class="text-blue-500 hover:underline">New Arrivals</a>.
        </p>
        <a href="/home" class="mt-4 bg-red-500 text-white py-2 px-4 rounded-lg hover:bg-red-700">
            <i class="bi bi-arrow-left-circle mr-2"></i>Shop Now
        </a>
    </div>
<% } %>

<%- include('footer') %>

<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        document.querySelectorAll('.delete-link').forEach((element) => {
            element.addEventListener('click', function (e) {
                e.preventDefault();
                const productId = this.getAttribute('data-id');
                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you want to remove this item from the cart?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/remove-item/${productId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                            }
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire(
                                        'Deleted!',
                                        data.message,
                                        'success'
                                    ).then(() => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire(
                                        'Error!',
                                        data.message,
                                        'error'
                                    );
                                }
                            })
                            .catch(error => {
                                Swal.fire(
                                    'Error!',
                                    'There was a problem with the request.',
                                    'error'
                                );
                                console.error('Error:', error);
                            });
                    }
                });
            });
        });
    });
    async function increment(productId) {
        console.log(productId)
        try {
            const res = await fetch('/cart/increment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId })
            });
            if (res.ok) {
                window.location.href = '/cart';
            } else {
                const error = await res.text();
                showError(error);
            }
        } catch (error) {
            console.error(`Error incrementing product quantity in cart: ${error}`);
            showError('An unexpected error occurred');
        }
    }

    async function decrement(productId) {
        try {
            const res = await fetch('/cart/decrement', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId })
            });
            if (res.ok) {
                window.location.href = '/cart';
            } else {
                const error = await res.text();
                showError(error);
            }
        } catch (error) {
            console.error(`Error decrementing product quantity in cart: ${error}`);
        }
    }

    function showError(message) {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: message,
        });
    }
</script>